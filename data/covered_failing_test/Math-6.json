[
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 56,
        "end_line": 56,
        "name": "AbstractRealMatrix",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 65,
        "end_line": 74,
        "name": "AbstractRealMatrix",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 77,
        "end_line": 91,
        "name": "add",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 94,
        "end_line": 108,
        "name": "subtract",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 111,
        "end_line": 122,
        "name": "scalarAdd",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 125,
        "end_line": 136,
        "name": "scalarMultiply",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 139,
        "end_line": 158,
        "name": "multiply",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 279,
        "end_line": 302,
        "name": "getFrobeniusNorm",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 464,
        "end_line": 474,
        "name": "getColumnMatrix",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 519,
        "end_line": 530,
        "name": "setColumnVector",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 533,
        "end_line": 542,
        "name": "getRow",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 558,
        "end_line": 567,
        "name": "getColumn",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 597,
        "end_line": 612,
        "name": "transpose",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 615,
        "end_line": 617,
        "name": "isSquare",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 872,
        "end_line": 874,
        "name": "walkInOptimizedOrder",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 98,
        "end_line": 101,
        "name": "RealMatrixFormat",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 112,
        "end_line": 117,
        "name": "RealMatrixFormat",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 130,
        "end_line": 143,
        "name": "RealMatrixFormat",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 206,
        "end_line": 208,
        "name": "getFormat",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 214,
        "end_line": 216,
        "name": "getInstance",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java",
        "start_line": 223,
        "end_line": 225,
        "name": "getInstance",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/CompositeFormat.java",
        "start_line": 42,
        "end_line": 44,
        "name": "getDefaultNumberFormat",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/CompositeFormat.java",
        "start_line": 53,
        "end_line": 57,
        "name": "getDefaultNumberFormat",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 378,
        "end_line": 380,
        "name": "sqrt",
        "failing_tests_count": 19
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1119,
        "end_line": 1121,
        "name": "log",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1129,
        "end_line": 1353,
        "name": "log",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1676,
        "end_line": 1689,
        "name": "polySine",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1697,
        "end_line": 1707,
        "name": "polyCosine",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1716,
        "end_line": 1831,
        "name": "sinQ",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1840,
        "end_line": 1849,
        "name": "cosQ",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 2225,
        "end_line": 2284,
        "name": "sin",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 2292,
        "end_line": 2338,
        "name": "cos",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 2998,
        "end_line": 3000,
        "name": "abs",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3016,
        "end_line": 3018,
        "name": "abs",
        "failing_tests_count": 27
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3420,
        "end_line": 3422,
        "name": "min",
        "failing_tests_count": 20
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3488,
        "end_line": 3490,
        "name": "max",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3531,
        "end_line": 3549,
        "name": "max",
        "failing_tests_count": 27
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 47,
        "end_line": 52,
        "name": "BaseOptimizer",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 92,
        "end_line": 94,
        "name": "getIterations",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 101,
        "end_line": 103,
        "name": "getConvergenceChecker",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 133,
        "end_line": 144,
        "name": "optimize",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 160,
        "end_line": 163,
        "name": "incrementEvaluationCount",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 187,
        "end_line": 200,
        "name": "parseOptimizationData",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 47,
        "end_line": 49,
        "name": "BaseMultivariateOptimizer",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 63,
        "end_line": 67,
        "name": "optimize",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 79,
        "end_line": 101,
        "name": "parseOptimizationData",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 108,
        "end_line": 110,
        "name": "getStartPoint",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 114,
        "end_line": 116,
        "name": "getLowerBound",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 120,
        "end_line": 122,
        "name": "getUpperBound",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseMultivariateOptimizer.java",
        "start_line": 127,
        "end_line": 155,
        "name": "checkParameters",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java",
        "start_line": 42,
        "end_line": 44,
        "name": "MultivariateOptimizer",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java",
        "start_line": 60,
        "end_line": 65,
        "name": "optimize",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java",
        "start_line": 78,
        "end_line": 95,
        "name": "parseOptimizationData",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java",
        "start_line": 100,
        "end_line": 102,
        "name": "getGoalType",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java",
        "start_line": 114,
        "end_line": 117,
        "name": "computeObjectiveValue",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 79,
        "end_line": 86,
        "name": "Incrementor",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 95,
        "end_line": 97,
        "name": "setMaximalCount",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 113,
        "end_line": 115,
        "name": "getCount",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 154,
        "end_line": 158,
        "name": "incrementCount",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 163,
        "end_line": 165,
        "name": "resetCount",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/MaxEval.java",
        "start_line": 35,
        "end_line": 41,
        "name": "MaxEval",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/MaxEval.java",
        "start_line": 48,
        "end_line": 50,
        "name": "getMaxEval",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction.java",
        "start_line": 35,
        "end_line": 37,
        "name": "ObjectiveFunction",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getObjectiveFunction",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/InitialGuess.java",
        "start_line": 35,
        "end_line": 37,
        "name": "InitialGuess",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/InitialGuess.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getInitialGuess",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Pair.java",
        "start_line": 45,
        "end_line": 48,
        "name": "Pair",
        "failing_tests_count": 28
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Pair.java",
        "start_line": 64,
        "end_line": 66,
        "name": "getKey",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Pair.java",
        "start_line": 73,
        "end_line": 75,
        "name": "getValue",
        "failing_tests_count": 27
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointValuePair.java",
        "start_line": 42,
        "end_line": 45,
        "name": "PointValuePair",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointValuePair.java",
        "start_line": 55,
        "end_line": 62,
        "name": "PointValuePair",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointValuePair.java",
        "start_line": 69,
        "end_line": 72,
        "name": "getPoint",
        "failing_tests_count": 26
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/MathUtils.java",
        "start_line": 262,
        "end_line": 267,
        "name": "checkNotNull",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "start_line": 95,
        "end_line": 102,
        "name": "compareTo",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "start_line": 271,
        "end_line": 273,
        "name": "equals",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "start_line": 330,
        "end_line": 345,
        "name": "equals",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 223,
        "end_line": 239,
        "name": "CMAESOptimizer",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 358,
        "end_line": 364,
        "name": "optimize",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 367,
        "end_line": 515,
        "name": "doOptimize",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 527,
        "end_line": 546,
        "name": "parseOptimizationData",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 551,
        "end_line": 566,
        "name": "checkParameters",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 573,
        "end_line": 637,
        "name": "initializeCMA",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 647,
        "end_line": 660,
        "name": "updateEvolutionPaths",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 700,
        "end_line": 759,
        "name": "updateCovariance",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 766,
        "end_line": 795,
        "name": "updateBD",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 803,
        "end_line": 808,
        "name": "push",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 816,
        "end_line": 827,
        "name": "sortedIndices",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 981,
        "end_line": 989,
        "name": "log",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 995,
        "end_line": 1003,
        "name": "sqrt",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1009,
        "end_line": 1018,
        "name": "square",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1025,
        "end_line": 1033,
        "name": "times",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1040,
        "end_line": 1048,
        "name": "divide",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1055,
        "end_line": 1063,
        "name": "selectColumns",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1070,
        "end_line": 1078,
        "name": "triu",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1084,
        "end_line": 1094,
        "name": "sumRows",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1101,
        "end_line": 1115,
        "name": "diag",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1125,
        "end_line": 1130,
        "name": "copyColumn",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1137,
        "end_line": 1143,
        "name": "ones",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1151,
        "end_line": 1159,
        "name": "eye",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1166,
        "end_line": 1168,
        "name": "zeros",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1176,
        "end_line": 1186,
        "name": "repmat",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1194,
        "end_line": 1203,
        "name": "sequence",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1209,
        "end_line": 1220,
        "name": "max",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1226,
        "end_line": 1237,
        "name": "min",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1243,
        "end_line": 1251,
        "name": "max",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1257,
        "end_line": 1265,
        "name": "min",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1271,
        "end_line": 1277,
        "name": "inverse",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1283,
        "end_line": 1289,
        "name": "reverse",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 1308,
        "end_line": 1316,
        "name": "randn1",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java",
        "start_line": 40,
        "end_line": 42,
        "name": "BitsStreamGenerator",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java",
        "start_line": 89,
        "end_line": 93,
        "name": "nextDouble",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java",
        "start_line": 101,
        "end_line": 120,
        "name": "nextGaussian",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java",
        "start_line": 194,
        "end_line": 196,
        "name": "clear",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "start_line": 106,
        "end_line": 109,
        "name": "MersenneTwister",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "start_line": 141,
        "end_line": 155,
        "name": "setSeed",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "start_line": 164,
        "end_line": 207,
        "name": "setSeed",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "start_line": 214,
        "end_line": 217,
        "name": "setSeed",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "start_line": 228,
        "end_line": 263,
        "name": "next",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleBounds.java",
        "start_line": 41,
        "end_line": 45,
        "name": "SimpleBounds",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleBounds.java",
        "start_line": 52,
        "end_line": 54,
        "name": "getLower",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleBounds.java",
        "start_line": 60,
        "end_line": 62,
        "name": "getUpper",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 289,
        "end_line": 298,
        "name": "Sigma",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 303,
        "end_line": 305,
        "name": "getSigma",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 326,
        "end_line": 332,
        "name": "PopulationSize",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 337,
        "end_line": 339,
        "name": "getPopulationSize",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 892,
        "end_line": 895,
        "name": "FitnessFunction",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 901,
        "end_line": 911,
        "name": "value",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 935,
        "end_line": 937,
        "name": "setValueRange",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 943,
        "end_line": 958,
        "name": "repair",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 965,
        "end_line": 972,
        "name": "penalty",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 58,
        "end_line": 63,
        "name": "Array2DRowRealMatrix",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 78,
        "end_line": 81,
        "name": "Array2DRowRealMatrix",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 99,
        "end_line": 123,
        "name": "Array2DRowRealMatrix",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 141,
        "end_line": 146,
        "name": "createMatrix",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 252,
        "end_line": 255,
        "name": "getData",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 267,
        "end_line": 300,
        "name": "setSubMatrix",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 303,
        "end_line": 308,
        "name": "getEntry",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 311,
        "end_line": 316,
        "name": "setEntry",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 337,
        "end_line": 340,
        "name": "getRowDimension",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 343,
        "end_line": 346,
        "name": "getColumnDimension",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 408,
        "end_line": 420,
        "name": "walkInRowOrder",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 527,
        "end_line": 535,
        "name": "copyOut",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java",
        "start_line": 545,
        "end_line": 548,
        "name": "copyIn",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 80,
        "end_line": 83,
        "name": "createRealMatrix",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 127,
        "end_line": 136,
        "name": "createRealMatrix",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 214,
        "end_line": 220,
        "name": "createRealDiagonalMatrix",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 336,
        "end_line": 347,
        "name": "createColumnRealMatrix",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 387,
        "end_line": 413,
        "name": "isSymmetricInternal",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 437,
        "end_line": 440,
        "name": "isSymmetric",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 451,
        "end_line": 456,
        "name": "checkMatrixIndex",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 465,
        "end_line": 472,
        "name": "checkRowIndex",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 481,
        "end_line": 487,
        "name": "checkColumnIndex",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 569,
        "end_line": 576,
        "name": "checkAdditionCompatible",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 586,
        "end_line": 593,
        "name": "checkSubtractionCompatible",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java",
        "start_line": 603,
        "end_line": 610,
        "name": "checkMultiplicationCompatible",
        "failing_tests_count": 18
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.java",
        "start_line": 32,
        "end_line": 34,
        "name": "start",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor.java",
        "start_line": 40,
        "end_line": 42,
        "name": "end",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMathLiteralArrays.java",
        "start_line": 6173,
        "end_line": 6175,
        "name": "loadLnMant",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3808,
        "end_line": 3844,
        "name": "CodyWaite",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3849,
        "end_line": 3851,
        "name": "getK",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3855,
        "end_line": 3857,
        "name": "getRemA",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3861,
        "end_line": 3863,
        "name": "getRemB",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 843,
        "end_line": 846,
        "name": "DoubleIndex",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 849,
        "end_line": 851,
        "name": "compareTo",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "start_line": 761,
        "end_line": 765,
        "name": "copyOf",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java",
        "start_line": 117,
        "end_line": 128,
        "name": "EigenDecomposition",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java",
        "start_line": 197,
        "end_line": 208,
        "name": "getV",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java",
        "start_line": 221,
        "end_line": 236,
        "name": "getD",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java",
        "start_line": 559,
        "end_line": 564,
        "name": "transformToTridiagonal",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java",
        "start_line": 572,
        "end_line": 721,
        "name": "findEigenVectors",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 62,
        "end_line": 78,
        "name": "TriDiagonalTransformer",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 85,
        "end_line": 90,
        "name": "getQ",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 97,
        "end_line": 132,
        "name": "getQT",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 174,
        "end_line": 176,
        "name": "getMainDiagonalRef",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 184,
        "end_line": 186,
        "name": "getSecondaryDiagonalRef",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java",
        "start_line": 192,
        "end_line": 253,
        "name": "transform",
        "failing_tests_count": 15
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 85,
        "end_line": 87,
        "name": "ArrayRealVector",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 597,
        "end_line": 605,
        "name": "getEntry",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 608,
        "end_line": 611,
        "name": "getDimension",
        "failing_tests_count": 16
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java",
        "start_line": 81,
        "end_line": 83,
        "name": "RealVectorFormat",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java",
        "start_line": 105,
        "end_line": 114,
        "name": "RealVectorFormat",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java",
        "start_line": 161,
        "end_line": 163,
        "name": "getInstance",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/RealVectorFormat.java",
        "start_line": 170,
        "end_line": 172,
        "name": "getInstance",
        "failing_tests_count": 17
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleBounds.java",
        "start_line": 72,
        "end_line": 79,
        "name": "unbounded",
        "failing_tests_count": 14
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 2422,
        "end_line": 2424,
        "name": "atan",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 2432,
        "end_line": 2571,
        "name": "atan",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 71,
        "end_line": 73,
        "name": "getEvaluations",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java",
        "start_line": 44,
        "end_line": 48,
        "name": "AbstractConvergenceChecker",
        "failing_tests_count": 11
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java",
        "start_line": 53,
        "end_line": 55,
        "name": "getRelativeThreshold",
        "failing_tests_count": 11
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/AbstractConvergenceChecker.java",
        "start_line": 60,
        "end_line": 62,
        "name": "getAbsoluteThreshold",
        "failing_tests_count": 11
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java",
        "start_line": 64,
        "end_line": 68,
        "name": "SimpleValueChecker",
        "failing_tests_count": 9
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java",
        "start_line": 111,
        "end_line": 127,
        "name": "converged",
        "failing_tests_count": 9
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointValuePair.java",
        "start_line": 79,
        "end_line": 81,
        "name": "getPointRef",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 96,
        "end_line": 98,
        "name": "SimplexOptimizer",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 104,
        "end_line": 106,
        "name": "SimplexOptimizer",
        "failing_tests_count": 7
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 119,
        "end_line": 123,
        "name": "optimize",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 126,
        "end_line": 177,
        "name": "doOptimize",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 189,
        "end_line": 204,
        "name": "parseOptimizationData",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java",
        "start_line": 212,
        "end_line": 220,
        "name": "checkParameters",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 97,
        "end_line": 118,
        "name": "AbstractSimplex",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 182,
        "end_line": 184,
        "name": "getDimension",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 193,
        "end_line": 195,
        "name": "getSize",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 216,
        "end_line": 234,
        "name": "build",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 244,
        "end_line": 257,
        "name": "evaluate",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 266,
        "end_line": 276,
        "name": "replaceWorstPoint",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 283,
        "end_line": 287,
        "name": "getPoints",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 295,
        "end_line": 301,
        "name": "getPoint",
        "failing_tests_count": 8
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java",
        "start_line": 120,
        "end_line": 122,
        "name": "NelderMeadSimplex",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java",
        "start_line": 136,
        "end_line": 145,
        "name": "NelderMeadSimplex",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex.java",
        "start_line": 185,
        "end_line": 280,
        "name": "iterate",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 310,
        "end_line": 316,
        "name": "setPoint",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex.java",
        "start_line": 324,
        "end_line": 329,
        "name": "setPoints",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java",
        "start_line": 100,
        "end_line": 102,
        "name": "MultiDirectionalSimplex",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java",
        "start_line": 113,
        "end_line": 119,
        "name": "MultiDirectionalSimplex",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java",
        "start_line": 153,
        "end_line": 179,
        "name": "iterate",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex.java",
        "start_line": 193,
        "end_line": 215,
        "name": "evaluateNewSimplex",
        "failing_tests_count": 4
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3025,
        "end_line": 3030,
        "name": "ulp",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 52,
        "end_line": 54,
        "name": "Incrementor",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 61,
        "end_line": 69,
        "name": "Incrementor",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "start_line": 243,
        "end_line": 245,
        "name": "equals",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "start_line": 748,
        "end_line": 750,
        "name": "copyOf",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "start_line": 776,
        "end_line": 780,
        "name": "copyOf",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/function/Sinc.java",
        "start_line": 71,
        "end_line": 73,
        "name": "Sinc",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/function/Sinc.java",
        "start_line": 81,
        "end_line": 83,
        "name": "Sinc",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/function/Sinc.java",
        "start_line": 86,
        "end_line": 96,
        "name": "value",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 98,
        "end_line": 102,
        "name": "PowellOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 117,
        "end_line": 136,
        "name": "PowellOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 149,
        "end_line": 152,
        "name": "PowellOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 164,
        "end_line": 169,
        "name": "PowellOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 172,
        "end_line": 268,
        "name": "doOptimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 280,
        "end_line": 296,
        "name": "newPointAndDirection",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 375,
        "end_line": 380,
        "name": "checkParameters",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 48,
        "end_line": 50,
        "name": "UnivariateOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 67,
        "end_line": 71,
        "name": "optimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 76,
        "end_line": 78,
        "name": "getGoalType",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 92,
        "end_line": 116,
        "name": "parseOptimizationData",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 121,
        "end_line": 123,
        "name": "getStartValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 127,
        "end_line": 129,
        "name": "getMin",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 133,
        "end_line": 135,
        "name": "getMax",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateOptimizer.java",
        "start_line": 147,
        "end_line": 150,
        "name": "computeObjectiveValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java",
        "start_line": 78,
        "end_line": 92,
        "name": "BrentOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java",
        "start_line": 114,
        "end_line": 288,
        "name": "doOptimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java",
        "start_line": 301,
        "end_line": 316,
        "name": "best",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 328,
        "end_line": 333,
        "name": "LineSearch",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java",
        "start_line": 344,
        "end_line": 368,
        "name": "search",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java",
        "start_line": 66,
        "end_line": 70,
        "name": "SimpleUnivariateValueChecker",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java",
        "start_line": 113,
        "end_line": 129,
        "name": "converged",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 78,
        "end_line": 80,
        "name": "BracketFinder",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 89,
        "end_line": 100,
        "name": "BracketFinder",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 112,
        "end_line": 208,
        "name": "search",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 228,
        "end_line": 230,
        "name": "getLo",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 244,
        "end_line": 246,
        "name": "getHi",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 260,
        "end_line": 262,
        "name": "getMid",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java",
        "start_line": 279,
        "end_line": 286,
        "name": "eval",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.java",
        "start_line": 35,
        "end_line": 37,
        "name": "UnivariateObjectiveFunction",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getObjectiveFunction",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java",
        "start_line": 46,
        "end_line": 60,
        "name": "SearchInterval",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java",
        "start_line": 77,
        "end_line": 79,
        "name": "getMin",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java",
        "start_line": 85,
        "end_line": 87,
        "name": "getMax",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/SearchInterval.java",
        "start_line": 93,
        "end_line": 95,
        "name": "getStartValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java",
        "start_line": 44,
        "end_line": 48,
        "name": "UnivariatePointValuePair",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java",
        "start_line": 55,
        "end_line": 57,
        "name": "getPoint",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/univariate/UnivariatePointValuePair.java",
        "start_line": 64,
        "end_line": 66,
        "name": "getValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java",
        "start_line": 669,
        "end_line": 687,
        "name": "updateCovarianceDiagonalOnly",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java",
        "start_line": 671,
        "end_line": 694,
        "name": "operate",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 1611,
        "end_line": 1668,
        "name": "pow",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "start_line": 3463,
        "end_line": 3481,
        "name": "min",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 103,
        "end_line": 109,
        "name": "ArrayRealVector",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 449,
        "end_line": 451,
        "name": "getDataRef",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 454,
        "end_line": 466,
        "name": "dotProduct",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 755,
        "end_line": 761,
        "name": "checkVectorDimensions",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 47,
        "end_line": 49,
        "name": "MultivariateVectorOptimizer",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 61,
        "end_line": 64,
        "name": "computeObjectiveValue",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 83,
        "end_line": 88,
        "name": "optimize",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 95,
        "end_line": 97,
        "name": "getWeight",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 104,
        "end_line": 106,
        "name": "getTarget",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 128,
        "end_line": 152,
        "name": "parseOptimizationData",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java",
        "start_line": 160,
        "end_line": 165,
        "name": "checkParameters",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java",
        "start_line": 49,
        "end_line": 51,
        "name": "JacobianMultivariateVectorOptimizer",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java",
        "start_line": 59,
        "end_line": 61,
        "name": "computeJacobian",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java",
        "start_line": 78,
        "end_line": 84,
        "name": "optimize",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer.java",
        "start_line": 96,
        "end_line": 111,
        "name": "parseOptimizationData",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 52,
        "end_line": 54,
        "name": "AbstractLeastSquaresOptimizer",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 64,
        "end_line": 66,
        "name": "computeWeightedJacobian",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 75,
        "end_line": 78,
        "name": "computeCost",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 110,
        "end_line": 112,
        "name": "getWeightSquareRoot",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 119,
        "end_line": 121,
        "name": "setCost",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 193,
        "end_line": 198,
        "name": "optimize",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 215,
        "end_line": 228,
        "name": "computeResiduals",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 241,
        "end_line": 256,
        "name": "parseOptimizationData",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "start_line": 264,
        "end_line": 276,
        "name": "squareRoot",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java",
        "start_line": 38,
        "end_line": 40,
        "name": "Target",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Target.java",
        "start_line": 47,
        "end_line": 49,
        "name": "getTarget",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "start_line": 41,
        "end_line": 43,
        "name": "Weight",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "start_line": 64,
        "end_line": 66,
        "name": "getWeight",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 50,
        "end_line": 54,
        "name": "DiagonalMatrix",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 63,
        "end_line": 65,
        "name": "DiagonalMatrix",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 81,
        "end_line": 85,
        "name": "DiagonalMatrix",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 105,
        "end_line": 108,
        "name": "copy",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 161,
        "end_line": 172,
        "name": "multiply",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 182,
        "end_line": 198,
        "name": "multiply",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 218,
        "end_line": 220,
        "name": "getDataRef",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 223,
        "end_line": 228,
        "name": "getEntry",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 233,
        "end_line": 242,
        "name": "setEntry",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 274,
        "end_line": 277,
        "name": "getRowDimension",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 280,
        "end_line": 283,
        "name": "getColumnDimension",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java",
        "start_line": 286,
        "end_line": 290,
        "name": "operate",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunction.java",
        "start_line": 35,
        "end_line": 37,
        "name": "ModelFunction",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunction.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getModelFunction",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian.java",
        "start_line": 35,
        "end_line": 37,
        "name": "ModelFunctionJacobian",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getModelFunctionJacobian",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java",
        "start_line": 42,
        "end_line": 45,
        "name": "PointVectorValuePair",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java",
        "start_line": 55,
        "end_line": 66,
        "name": "PointVectorValuePair",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 161,
        "end_line": 163,
        "name": "LevenbergMarquardtOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 269,
        "end_line": 280,
        "name": "LevenbergMarquardtOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 283,
        "end_line": 534,
        "name": "doOptimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 558,
        "end_line": 706,
        "name": "determineLMParameter",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 728,
        "end_line": 827,
        "name": "determineLMDirection",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 853,
        "end_line": 924,
        "name": "qrDecomposition",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 931,
        "end_line": 946,
        "name": "qTy",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java",
        "start_line": 952,
        "end_line": 957,
        "name": "checkParameters",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 125,
        "end_line": 128,
        "name": "BlockRealMatrix",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 146,
        "end_line": 178,
        "name": "BlockRealMatrix",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 201,
        "end_line": 243,
        "name": "toBlocksLayout",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 596,
        "end_line": 621,
        "name": "getData",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1249,
        "end_line": 1252,
        "name": "getRowDimension",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1255,
        "end_line": 1258,
        "name": "getColumnDimension",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1570,
        "end_line": 1572,
        "name": "blockHeight",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1579,
        "end_line": 1581,
        "name": "blockWidth",
        "failing_tests_count": 2
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java",
        "start_line": 724,
        "end_line": 727,
        "name": "toArray",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "start_line": 62,
        "end_line": 64,
        "name": "GaussNewtonOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "start_line": 72,
        "end_line": 76,
        "name": "GaussNewtonOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "start_line": 79,
        "end_line": 169,
        "name": "doOptimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java",
        "start_line": 175,
        "end_line": 180,
        "name": "checkParameters",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java",
        "start_line": 65,
        "end_line": 69,
        "name": "SimpleVectorValueChecker",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java",
        "start_line": 113,
        "end_line": 136,
        "name": "converged",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/PointVectorValuePair.java",
        "start_line": 104,
        "end_line": 106,
        "name": "getValueRef",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java",
        "start_line": 75,
        "end_line": 77,
        "name": "LUDecomposition",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java",
        "start_line": 86,
        "end_line": 165,
        "name": "LUDecomposition",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java",
        "start_line": 257,
        "end_line": 259,
        "name": "getSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java",
        "start_line": 279,
        "end_line": 283,
        "name": "Solver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java",
        "start_line": 291,
        "end_line": 325,
        "name": "solve",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 96,
        "end_line": 108,
        "name": "BlockRealMatrix",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 257,
        "end_line": 277,
        "name": "createBlocksLayout",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1213,
        "end_line": 1246,
        "name": "transpose",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java",
        "start_line": 1261,
        "end_line": 1298,
        "name": "operate",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "start_line": 59,
        "end_line": 61,
        "name": "getMaxEvaluations",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java",
        "start_line": 43,
        "end_line": 45,
        "name": "GradientMultivariateOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java",
        "start_line": 53,
        "end_line": 55,
        "name": "computeObjectiveGradient",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java",
        "start_line": 70,
        "end_line": 75,
        "name": "optimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer.java",
        "start_line": 87,
        "end_line": 102,
        "name": "parseOptimizationData",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 69,
        "end_line": 75,
        "name": "NonLinearConjugateGradientOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 158,
        "end_line": 168,
        "name": "NonLinearConjugateGradientOptimizer",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 183,
        "end_line": 188,
        "name": "optimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 191,
        "end_line": 288,
        "name": "doOptimize",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 300,
        "end_line": 317,
        "name": "parseOptimizationData",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 328,
        "end_line": 340,
        "name": "findUpperBound",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 401,
        "end_line": 406,
        "name": "checkParameters",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 66,
        "end_line": 70,
        "name": "BaseAbstractUnivariateSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 92,
        "end_line": 98,
        "name": "BaseAbstractUnivariateSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 105,
        "end_line": 107,
        "name": "getEvaluations",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 111,
        "end_line": 113,
        "name": "getMin",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 117,
        "end_line": 119,
        "name": "getMax",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 123,
        "end_line": 125,
        "name": "getStartValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 129,
        "end_line": 131,
        "name": "getAbsoluteAccuracy",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 135,
        "end_line": 137,
        "name": "getRelativeAccuracy",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 141,
        "end_line": 143,
        "name": "getFunctionValueAccuracy",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 153,
        "end_line": 157,
        "name": "computeObjectiveValue",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 171,
        "end_line": 186,
        "name": "setup",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 189,
        "end_line": 197,
        "name": "solve",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 273,
        "end_line": 278,
        "name": "verifySequence",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java",
        "start_line": 307,
        "end_line": 314,
        "name": "incrementEvaluationCount",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver.java",
        "start_line": 36,
        "end_line": 38,
        "name": "AbstractUnivariateSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java",
        "start_line": 46,
        "end_line": 48,
        "name": "BrentSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java",
        "start_line": 54,
        "end_line": 56,
        "name": "BrentSolver",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java",
        "start_line": 83,
        "end_line": 124,
        "name": "doSolve",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java",
        "start_line": 142,
        "end_line": 233,
        "name": "brent",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/util/Incrementor.java",
        "start_line": 104,
        "end_line": 106,
        "name": "getMaximalCount",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 345,
        "end_line": 347,
        "name": "precondition",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient.java",
        "start_line": 35,
        "end_line": 37,
        "name": "ObjectiveFunctionGradient",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient.java",
        "start_line": 44,
        "end_line": 46,
        "name": "getObjectiveFunctionGradient",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 370,
        "end_line": 374,
        "name": "LineSearchFunction",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java",
        "start_line": 377,
        "end_line": 394,
        "name": "value",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java",
        "start_line": 350,
        "end_line": 357,
        "name": "verifyInterval",
        "failing_tests_count": 1
    },
    {
        "file": "src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java",
        "start_line": 368,
        "end_line": 374,
        "name": "verifySequence",
        "failing_tests_count": 1
    }
]